def rna(DNA):

    RNA_Temp = []
    counter = 0
    codon = []
    for index, nucleotide in enumerate(DNA):
        if nucleotide == "A":
            codon.append("U")

        if nucleotide == "C":
            codon.append("G")

        if nucleotide == "T":
            codon.append("A")

        if nucleotide == "G":
            codon.append("C")
            
        counter += 1

        if counter == 3:
            RNA_Temp.append(codon)
            codon = []
            counter = 0

        if index == (len(DNA) -1):
            break
            
    print(RNA_Temp)
    return(RNA_Temp)
    
def checkDna(DNA):

    Bool = all(i in "ATCG" for i in DNA)
    return Bool

def protein(rna_template, proteinChain):

    proteinCodon = {"['U','U','U']":"Phe", "['U','U','C']":"Phe", "['U','U','A']":"Leu", "['U',U','G']":"Leu", "['U','C','U']":"Ser",
                    "['U','C','C']":"Ser","['U','C','A']":"Ser","['U','C','G']":"Ser","['U','A','U']":"Tyr","['U','A','C']":"Tyr","['U','A','A']":"STOP",
                    "['U','A','G']":"STOP","['U','G','U']":"Cys","['U','G','C']":"Cys","['U','G','A']":"STOP","['U','G','G']":"Trp","['C','U','U']":"Leu",
                    "['C','U','C']":"Leu","['C','U','A']":"Leu","['C','U','G']":"Leu","['C','C','U']":"Pro","['C','C','C']":"Pro","['C','C','A']":"Pro",
                    "['C','C','G']":"Pro","['C','A','U']":"His","['C','A','C']":"His","['C','A','A']":"Gln","['C','A','G']":"Gln","['C','G','U']":"Arg",
                    "['C','G','C']":"Arg","['C','G','A']":"Arg","['C','G','G']":"Arg","['A','U','U']":"Lle","['A','U','C']":"Lle","['A','U','A']":"Lle",
                    "['A','U','G']":"Met","['A','C','U']":"Thr","['A','C','C']":"Thr","['A','C','A']":"Thr","['A','C','G']":"Thr","['A','A','U']":"Asn",
                    "['A','A','C']":"Asn","['A','A','A']":"Lys","['A','A','G']":"Lys","['A','G','U']":"Ser","['A','G','C']":"Ser","['A','G','A']":"Arg",
                    "['A','G','G']":"Arg","['G','U','U']":"Val","['G','U','C']":"Val","['G','U','A']":"Val","['G','U','G']":"Val","['G','C','U']":"Ala",
                    "['G','C','C']":"Ala","['G','C','A']":"Ala","['G','C','G']":"Ala","['G','A','U']":"Asn","['G','A','C']":"Asp","['G','A','A']":"Glu",
                    "['G','A','G']":"Glu","['G','G','U']":"Gly","['G','G','C']":"Gly","['G','G','A']":"Gly","['G','G','G']":"Gly"}
    
    for i in rna_template:
        x = str(i)
        proteinChain.append(proteinCodon[x.replace(" ",'')])

    return(proteinChain)

def main():

    myDna = input("Enter DNA template: ")
    checking = checkDna(myDna)
    
    while checking != True:

        myDna = input("Your DNA has illegal characters. Enter correct DNA template: ")
        checking = checkDna(myDna)
        
    myRna = rna(myDna)
    myProtein = []
    translated = protein(myRna, myProtein)
    
    print(translated)
    
if __name__=="__main__":
    main()
